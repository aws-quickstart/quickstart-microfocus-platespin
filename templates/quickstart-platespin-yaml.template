AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates the Amazon EC2 instance into an existing VPC and related
  resources for the PlateSpin Migrate Quick Start. See the deployment guide at
  http://aws.amazon.com/quickstart for details. ***NOTE*** This template creates
  Amazon EC2 instances and related resources. You will be billed for the AWS
  resources used if you create a stack from this template.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PublicSubnetID
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - MigrateServerInstanceType
          - AssignElasticIP
          - KeyPairName
          - ServerAccessCIDR
          - HostAccessCIDR
          - TargetAccessCIDR
          - SNSTopicMailID
      - Label:
          default: PlateSpin Migrate server configuration
        Parameters:
          - MigrateServerHostname
          - MigrateAdminUsername
          - MigrateAdminPassword
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      AssignElasticIP:
        default: Assign elastic IP
      KeyPairName:
        default: Key pair name
      PublicSubnetID:
        default: Public subnet ID
      ServerAccessCIDR:
        default: Migrate server access CIDR
      HostAccessCIDR:
        default: Migrate host access CIDR
      TargetAccessCIDR:
        default: Target workloads access CIDR
      VPCID:
        default: VPC ID
      MigrateServerInstanceType:
        default: Migrate server instance type
      SNSTopicMailID:
        default: Email ID
      MigrateServerHostname:
        default: Hostname
      MigrateAdminUsername:
        default: Admin username
      MigrateAdminPassword:
        default: Admin password
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  MigrateServerHostname:
    Description: >-
      The hostname for your PlateSpin Migrate server atleast 5 characters long. Maximum number of allowed characters is 15.
    Type: String
    MinLength: '5'
    MaxLength: '15'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      Must begin with a letter and contain only alphanumeric characters. Minimum length of 5 characters. Maximum length upto 15 characters.
  MigrateAdminUsername:
    Description: The username for the PlateSpin Migrate server admin account.
    Type: String
    Default: migrateadmin
    MinLength: '5'
    MaxLength: '25'
    AllowedPattern: '[a-zA-Z0-9]*'
  MigrateAdminPassword:
    Description: >-
      The password for the PlateSpin Migrate server admin account. It must be at least 8 characters containing letters, numbers and symbols.
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: >-
      (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  MigrateServerInstanceType:
    Description: The Amazon EC2 instance type for your PlateSpin Migrate server.
    Type: String
    Default: t2.large
    AllowedValues:
      - t2.large
      - t2.xlarge
      - t3.large
      - t3.xlarge
      - m4.large
      - m4.xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
  KeyPairName:
    Description: >-
      The name of an existing EC2 key pair, which allows you to securely connect to your instance after it launches.
    Type: 'AWS::EC2::KeyPair::KeyName'
    AllowedPattern: .+
    ConstraintDescription: Must be the name of an existing EC2 key pair.
  VPCID:
    Description: The VPC ID for launching PlateSpin Migrate server instance.
    Type: 'AWS::EC2::VPC::Id'
    AllowedPattern: .+
    ConstraintDescription: Must be a valid VPC ID.
  PublicSubnetID:
    Description: The Public subnet ID for launching PlateSpin Migrate server instance.
    Type: 'AWS::EC2::Subnet::Id'
    AllowedPattern: .+
    ConstraintDescription: Must be a valid Subnet ID.
  AssignElasticIP:
    Description: >-
      Choose No to request a public IP address from Amazon's pool. Note that this IP will be changed when the instance is stopped and restarted.
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
  ServerAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      The CIDR range from which the PlateSpin Migrate server Web UI and services can be accessed through HTTPS. 
      For example, to get full access, specify 0.0.0.0/0.
    Type: String
    Default: 0.0.0.0/0
  HostAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      The CIDR range from which the PlateSpin Migrate server instance can be accessed through RDP. 
      For example, to get full access, specify 0.0.0.0/0.
    Type: String
    Default: 0.0.0.0/0
  TargetAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      The CIDR range from which the PlateSpin Migrate target workloads can be accessed through all TCP ports. 
      For example, to get full access within the selected VPC, specify the CIDR of the VPC.
    Type: String
    Default: 0.0.0.0/0
  SNSTopicMailID:
    Description: >-
      The email ID to which AWS CloudWatch alarm notifications about the 
      PlateSpin Migrate server instance will be sent.
    Type: String
    AllowedPattern: '^[\x20-\x45]?[\w-\+]+(\.[\w]+)*@[\w-]+(\.[\w]+)*(\.[a-z]{2,})$'
    ConstraintDescription: Must be a valid email ID.
    Default: dev@platespin.com
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart-migrate
    Description: >-
      The name of the S3 bucket that stores the Quick Start assets. 
      The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: platespin-migrate/
    Description: >-
      The S3 key name prefix for the Quick Start assets. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.
    Type: String
Conditions:
  AutoAssignEIP: !Equals 
    - !Ref AssignElasticIP
    - 'Yes'
Mappings:
  AWSAMIRegionMap:
    AMI:
      PSM201811AMI: PlateSpin 2018.11 T3
    us-west-2:
      PSM201811AMI: ami-06937399f4d21e7a9
Resources:
  ServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join 
        - _
        - - !Ref 'AWS::StackName'
          - PSMServer
          - SG
      GroupDescription: 'Allow access from HTTPS and RDP traffic'
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref ServerAccessCIDR
          Description: HTTPS from customer network
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !GetAtt ReplicationSecurityGroup.GroupId
          Description: HTTPS from PSM Replication SG 
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !GetAtt ProductionSecurityGroup.GroupId
          Description: HTTPS from PSM Production SG
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !GetAtt TestSecurityGroup.GroupId
          Description: HTTPS from PSM Test SG
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref HostAccessCIDR
          Description: RDP from remote admin machine
  ReplicationSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join 
        - _
        - - !Ref 'AWS::StackName'
          - PSMReplication
          - SG
      GroupDescription: 'Allow access for SSH, PlateSpin Migrate Data transfer'
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3725'
          ToPort: '3725'
          CidrIp: !Ref ServerAccessCIDR
          Description: Data Transfer from Source in customer network
  ReplicationSGInboundRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt ReplicationSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: !Join 
        - /
        - - !GetAtt MigrateServerInstance.PrivateIp
          - 32
      Description: SSH from Migrate Server
  ProductionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join 
        - _
        - - !Ref 'AWS::StackName'
          - PSMProduction
          - SG
      GroupDescription: 'Allow access for all TCP ports within same VPC'
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: !Ref TargetAccessCIDR
          Description: All TCP from within VPC
  TestSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join 
        - _
        - - !Ref 'AWS::StackName'
          - PSMTest
          - SG
      GroupDescription: 'Allow access for all TCP ports within same VPC'
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: !Ref TargetAccessCIDR
          Description: All TCP from within VPC
  MigratePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: PSMDefault
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - 'kms:Decrypt'
              - 'ec2:TerminateInstances'
              - 'ec2:DeleteTags'
              - 'ec2:StartInstances'
              - 'kms:Encrypt'
              - 'ec2:CreateTags'
              - 'kms:DescribeKey'
              - 'ec2:RunInstances'
              - 'ec2:StopInstances'
              - 'kms:CreateGrant'
            Resource:
              - 'arn:aws:kms:*:*:key/*'
              - 'arn:aws:ec2:*:*:subnet/*'
              - 'arn:aws:ec2:*:*:instance/*'
              - 'arn:aws:ec2:*:*:volume/*'
              - 'arn:aws:ec2:*:*:security-group/*'
              - 'arn:aws:ec2:*:*:network-interface/*'
              - 'arn:aws:ec2:*::image/*'
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - 'gamelift:DescribeEC2InstanceLimits'
              - 'ec2:DeregisterImage'
              - 'ec2:DeleteSnapshot'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeRegions'
              - 'ec2:CreateImage'
              - 'ec2:DescribeSnapshots'
              - 'ec2:DescribePlacementGroups'
              - 'ec2:DescribeSecurityGroups'
              - 'pricing:GetProducts'
              - 'ec2:DescribeHosts'
              - 'ec2:DescribeImages'
              - 'ec2:DescribeAvailabilityZones'
              - 'ec2:DescribeVpcs'
              - 'kms:ListAliases'
              - 'ec2:DescribeVolumes'
              - 'ec2:DescribeAccountAttributes'
              - 'ec2:DescribeReservedInstances'
              - 'ec2:ModifyInstanceAttribute'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeKeyPairs'
              - 'ec2:DescribeInstanceStatus'
            Resource: '*'
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - 'ec2:DeleteVolume'
              - 'ec2:CreateVolume'
            Resource: 'arn:aws:ec2:*:*:volume/*'
          - Sid: VisualEditor3
            Effect: Allow
            Action:
              - 'ec2:DetachVolume'
              - 'ec2:AttachVolume'
            Resource:
              - 'arn:aws:ec2:*:*:instance/*'
              - 'arn:aws:ec2:*:*:volume/*'
          - Sid: VisualEditor4
            Effect: Allow
            Action: 'ec2:RunInstances'
            Resource:
              - 'arn:aws:ec2:*:*:subnet/*'
              - 'arn:aws:ec2:*:*:key-pair/*'
              - 'arn:aws:ec2:*:*:instance/*'
              - 'arn:aws:ec2:*::snapshot/*'
              - 'arn:aws:ec2:*:*:launch-template/*'
              - 'arn:aws:ec2:*:*:volume/*'
              - 'arn:aws:ec2:*:*:security-group/*'
              - 'arn:aws:ec2:*:*:placement-group/*'
              - 'arn:aws:ec2:*:*:network-interface/*'
              - 'arn:aws:ec2:*::image/*'
          - Sid: VisualEditor5
            Effect: Allow
            Action: 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
      Roles:
        - !Ref MigrateRole
  MigrateRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  MigrateInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref MigrateRole
  PublicStaticIP:
    Type: 'AWS::EC2::EIP'
    Condition: AutoAssignEIP
    Properties:
      InstanceId: !Ref MigrateServerInstance
      Domain: vpc
  MigrateServerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref MigrateRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        configSets:
          config:
            - fetchResources
            - prepare
            - setup
            - finalize
        fetchResources:
          files:
            'C:\cfn\scripts\Unzip-Archive.ps1':
              source: !Sub >-
                  https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1
            'C:\cfn\modules\AWSQuickStart.zip':
              source: !Sub >-
                  https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip
            'C:\cfn\scripts\Join-Domain.ps1':
              source: !Sub >-
                  https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1
            'C:\cfn\scripts\Rename-Computer.ps1':
              source: !Sub >-
                  https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1
            'C:\cfn\scripts\Create-MigrateAdmin.ps1':
              source: !Sub >-
                  https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/Create-MigrateAdmin.ps1
        prepare:
          commands:
            1-set-execution-policy:
              command: >-
                powershell.exe -Command "Set-ExecutionPolicy RemoteSigned
                -Force"
              waitAfterCompletion: '0'
            2-unpack-quickstart-module:
              command: >-
                powershell.exe -Command C:\cfn\scripts\Unzip-Archive.ps1 -Source
                C:\cfn\modules\AWSQuickStart.zip -Destination
                C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
              waitAfterCompletion: '0'
            3-init-quickstart-module:
              command: !Join 
                - ''
                - - powershell.exe -Command "
                  - New-AWSQuickStartResourceSignal -Stack '
                  - !Ref 'AWS::StackName'
                  - ''' -Resource ''MigrateServerInstance'' -Region '''
                  - !Ref 'AWS::Region'
                  - '''"'
              waitAfterCompletion: '0'
        setup:
          commands:
            1-add-migrate-admin:
              command: !Join 
                - ''
                - - >-
                    powershell.exe -Command "C:\cfn\scripts\Create-MigrateAdmin.ps1
                    -Name '
                  - !Ref MigrateAdminUsername
                  - ''' -Password '''
                  - !Ref MigrateAdminPassword
                  - '''"'
              waitAfterCompletion: '0'
            2-rename-computer:
              command: !Join 
                - ''
                - - >-
                    powershell.exe -Command "C:\cfn\scripts\Rename-Computer.ps1
                    -Restart -NewName '
                  - !Ref MigrateServerHostname
                  - '''"'
              waitAfterCompletion: forever
            3-wait-for-command-execution:
              command: powershell.exe -command Start-Sleep -Seconds 60
              waitAfterCompletion: '0'
        finalize:
          commands:
            1-signal-success:
              command: powershell.exe -Command "Write-AWSQuickStartStatus"
              waitAfterCompletion: '0'
    Properties:
      InstanceType: !Ref MigrateServerInstanceType
      ImageId: !FindInMap 
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - PSM201811AMI
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref MigrateInstanceProfile
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref ServerSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - '-'
              - !Ref MigrateServerHostname
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <script>
            - 'cfn-init.exe -v -c config -s '
            - !Ref 'AWS::StackId'
            - ' -r MigrateServerInstance'
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              </script>
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT45M
  RecoveryAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        Trigger a recovery when PlateSpin Migrate server instance status check
        fails for 15 consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
        - !Join 
          - ''
          - - 'arn:aws:automate:'
            - !Ref 'AWS::Region'
            - ':ec2:recover'
        - !Ref AlarmNotificationTopic
      Dimensions:
        - Name: InstanceId
          Value: !Ref MigrateServerInstance
  CPUAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        CPU alarm when PlateSpin Migrate server instance CPU usage average
        percentage exceeds 90%
      AlarmActions:
        - !Ref AlarmNotificationTopic
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref MigrateServerInstance
  AlarmNotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref SNSTopicMailID
          Protocol: email
Outputs:
  MigrateServerURL:
    Description: The public URL of the deployed PlateSpin Migrate server
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt MigrateServerInstance.PublicDnsName
        - /migrate
  MigrateServerIP:
    Description: The public IP address of the deployed PlateSpin Migrate server instance
    Value: !GetAtt MigrateServerInstance.PublicIp
  MigrateServerInstanceID:
    Description: The PlateSpin Migrate server EC2 instance ID
    Value: !Ref MigrateServerInstance
